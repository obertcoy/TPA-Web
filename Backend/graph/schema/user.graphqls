# GraphQL schema example
#
# https://gqlgen.com/getting-started/

scalar Time

directive @auth on INPUT_FIELD_DEFINITION | FIELD_DEFINITION

type User {
  id: ID!
  first_name: String!
  last_name: String!
  email: String!
  gender: String!
  dob: Time!
  activated: Boolean!
  profileImageURL: String
  bannerImageURL: String

  friend: [User!]
  pendingFriend: [User!]
  blockedUser: [User!]
  specificFriend: [User!]

  groupInvite: [Group!] @goField(forceResolver: true)
}

type UserAuthorization {
  user: User!
  token: String!
}

input LoginCredential {
  email: String!
  password: String!
}

input NewUser {
  first_name: String!
  last_name: String!
  email: String!
  gender: String!
  dob: Time!
  password: String!
}

type Query {
  getUser(id: ID!): User! @auth
  getAllUser: [User!]! 
  getAllNonFriend(id: ID!): [User!]! @auth
  getPeopleYouMayKnow(id: ID!): [User!]

}

type Mutation {
  createUser(inputUser: NewUser!): User!
  activateUser(token: String!): Boolean!
  sendChangePassword(email: String!): Boolean!
  verifyChangePasswordToken(email: String!, token: String!): Boolean!
  changePassword(email: String!, newPassword: String!): Boolean!
  updateUser(id: ID!, inputUser: NewUser!): User!
  deleteUser(id: ID!): User!
  loginUser(inputCredential: LoginCredential!): UserAuthorization!

  updateProfileImage(fileURL: String!): Boolean! @auth
  updateBannerImage(fileURL: String!): Boolean! @auth

  sendFriendRequest(friendID: ID!): Boolean! @auth
  acceptFriendRequest(friendID: ID!): Boolean! @auth
  rejectFriendRequest(friendID: ID!): Boolean! @auth
  blockUser(userID: ID!): Boolean! @auth
  unblockUser(userID: ID!): Boolean! @auth

  addSpecificFriend(friendID: ID!): Boolean! @auth
  removeSpecificFriend(friendID: ID!): Boolean! @auth
  
  acceptGroupInvite(groupID: ID!): Boolean! @auth
  rejectGroupInvite(groupID: ID!): Boolean! @auth

}
