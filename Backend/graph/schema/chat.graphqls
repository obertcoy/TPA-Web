type ChatRoom {
    id:ID!
    user: [User!] @goField(forceResolver: true)
    createdAt: Time!
    chat: [Chat!] @goField(forceResolver: true)
    group: Group @goField(forceResolver: true)
}

type Chat{
    id: ID!
    text: String
    fileURL: String
    createdAt: Time!
    user: User! @goField(forceResolver: true)
    post: Post @goField(forceResolver: true)
}

input NewChatRoom{
    userID:[String!]
    groupID: String
}

input NewChat{
    text: String
    fileURL: String
    chatRoomID: String!
    postID: ID
}

extend type Query{
    getAllChatRoom: [ChatRoom!] @auth
    getChatRoom(chatRoomID: ID!): ChatRoom! @auth
}

type Subscription{
    getChat(chatRoomID: ID!): [Chat!] @auth
}

extend type Mutation{
    createChatRoom(inputChatRoom: NewChatRoom!): ChatRoom! @auth
    goToChatRoom(inputChatRoom: NewChatRoom!): ChatRoom! @auth
    createChat(inputChat: NewChat!): Chat! @auth
}